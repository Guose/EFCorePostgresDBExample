// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NinjaDomain.WebApi.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NinjaDomain.WebApi.Migrations
{
    [DbContext(typeof(NinjaDomainDbContext))]
    partial class NinjaDomainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NinjaDomain.WebApi.Models.ClanModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClanName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDirty")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Clans");
                });

            modelBuilder.Entity("NinjaDomain.WebApi.Models.NinjaEquipmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte>("EquipmentType")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsDirty")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NinjaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NinjaId");

                    b.ToTable("NinjaEquipment");
                });

            modelBuilder.Entity("NinjaDomain.WebApi.Models.NinjaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClanId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDirty")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("ServedInOniwaban")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ClanId");

                    b.ToTable("Ninjas");
                });

            modelBuilder.Entity("NinjaDomain.WebApi.Models.NinjaEquipmentModel", b =>
                {
                    b.HasOne("NinjaDomain.WebApi.Models.NinjaModel", "Ninja")
                        .WithMany("EquipmentOwned")
                        .HasForeignKey("NinjaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_EquipmentOwned_Ninja");

                    b.Navigation("Ninja");
                });

            modelBuilder.Entity("NinjaDomain.WebApi.Models.NinjaModel", b =>
                {
                    b.HasOne("NinjaDomain.WebApi.Models.ClanModel", "Clan")
                        .WithMany("Ninjas")
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ninja_Clan");

                    b.Navigation("Clan");
                });

            modelBuilder.Entity("NinjaDomain.WebApi.Models.ClanModel", b =>
                {
                    b.Navigation("Ninjas");
                });

            modelBuilder.Entity("NinjaDomain.WebApi.Models.NinjaModel", b =>
                {
                    b.Navigation("EquipmentOwned");
                });
#pragma warning restore 612, 618
        }
    }
}
